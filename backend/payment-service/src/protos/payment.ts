// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.180.0
//   protoc               v3.20.3
// source: src/protos/payment.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "payment";

export interface TransactionRequest {
  amount: number;
  orderUUID: string;
  paymentType: string;
}

export interface TransactionResponse {
  paymentUrl: string;
}

export interface SaveNewPaymentRequest {
  externalRequest: string;
  amount: number;
  orderId: number;
  orderUUID: string;
  payOnlineType: string;
  hairStyleId: number;
  userId: number;
}

export interface SaveNewPaymentResponse {
  bankCode: string;
  bankTranNo: string;
}

export interface Payment {
  id: number;
  orderId: number;
  type: string;
  bankCode: string;
  payTime: string;
  bankTranNo: string;
  amount: number;
}

export interface GetListPaymentByOrderIdsRequest {
  orderIds: number[];
}

export interface GetListPaymentByOrderIdsResponse {
  payments: Payment[];
}

export const PAYMENT_PACKAGE_NAME = "payment";

export interface PaymentServiceClient {
  transaction(request: TransactionRequest): Observable<TransactionResponse>;

  saveNewPayment(request: SaveNewPaymentRequest): Observable<SaveNewPaymentResponse>;

  getListPaymentByOrderIds(request: GetListPaymentByOrderIdsRequest): Observable<GetListPaymentByOrderIdsResponse>;
}

export interface PaymentServiceController {
  transaction(
    request: TransactionRequest,
  ): Promise<TransactionResponse> | Observable<TransactionResponse> | TransactionResponse;

  saveNewPayment(
    request: SaveNewPaymentRequest,
  ): Promise<SaveNewPaymentResponse> | Observable<SaveNewPaymentResponse> | SaveNewPaymentResponse;

  getListPaymentByOrderIds(
    request: GetListPaymentByOrderIdsRequest,
  ):
    | Promise<GetListPaymentByOrderIdsResponse>
    | Observable<GetListPaymentByOrderIdsResponse>
    | GetListPaymentByOrderIdsResponse;
}

export function PaymentServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["transaction", "saveNewPayment", "getListPaymentByOrderIds"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PaymentService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PaymentService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENT_SERVICE_NAME = "PaymentService";
